"""
Данная программа автоматически делит уже готовую выборку на тестовую и обучающую
На вход подается аргумент - путь к папке, в которой хранятся картинки
Второй аргумент - количество изображений из выборки, которые пойдут на выборку тестирования нейронной сети
В этой же папке создастся подпапка с результатом, result
Всем картинкам даст порядковый номер от 1 до N
Импорт библиотек, sys, os, Image (библиотека Pillow)
"""
import sys
import os
from PIL import Image
import random

PATH = sys.argv[1]  # Получаем из аргумента путь к папке, в которой хранится выборка для обучения
TEST_COUNT = int(sys.argv[2])  # Получаем из аргумента количество изображений из перерабатываемой выборки, которые будут
# составлять выборку тестирования
if not os.path.isdir(PATH):  # Если введенного в аргументы пути не существует
    print("Введите существующий путь")  # Выводим информацию, что требуется ввести существующий путь
    exit()  # Завершаем программу
if not TEST_COUNT:
    print("Введите корректное количество картинок для тестирования")  # Выводим информацию, что требуется ввести
    # корректное число картинок для тестируемой выборки
    exit()  # Завершаем программу
RESULT_PATH = PATH + "\\result"  # Путь к подпапке с результатом
RESULT_TRAIN = RESULT_PATH + "\\train"  # Путь к подпапке с обучающей выборкой
RESULT_TEST = RESULT_PATH + "\\test"  # Путь к подпапке с тестирующей выборкой

for path_to_create in (RESULT_PATH, RESULT_TRAIN, RESULT_TEST):  # Создаем все объявленные папки, если их
    # не существует
    if not os.path.isdir(path_to_create):
        os.mkdir(path_to_create)
i = 1  # Счетчик
images = list(os.listdir(PATH))  # Преобразование списка файлов в папке в list
random.shuffle(images)  # Перемешивание списка файлов
for file in images:  # Цикл перебора файлов в папке
    if not os.path.isfile(PATH + "\\" + file):  # Если в списке попались не файлы, а папки, пропускаем их
        continue
    image = None  # Переменная изображения
    try:
        image = Image.open(PATH + "\\" + file)  # Создаем объект класса Image, аргумент в конструкторе - путь к файлу,
        # из которого создается изображение
    except:
        print(f'Файл {file} пропущен по ошибке. Возможно, он не является изображением.')  # Выводим информацию, что файл
        # не открылся как изображение
        continue
    if i <= TEST_COUNT:  # Если счетчик изображений еще не достиг количества картинок на тесты, то
        image.save(f'{RESULT_TEST}\\{i}.png')  # Сохраняем измененное цветное изображение в
        # папке с выборкой для тестирования с названием - порядковый номер
        print(f'Изображение {file} обработано в выборку для тестирования.')
    else:
        image.save(f'{RESULT_TRAIN}\\{i-TEST_COUNT}.png')  # Сохраняем измененное цветное
        # изображение в папке с выборкой для обучения с названием - порядковый номер
        print(f'Изображение {file} обработано в выборку для обучения.')
    i += 1  # Прибавляем к счетчику единицу
print(f'Преобразование успешно выполнено.')  # Завершение операции
